<%@ jet 
imports="
org.talend.core.model.process.INode
org.talend.core.model.process.ElementParameterParser
org.talend.core.model.process.IConnection
org.talend.core.model.process.IConnectionCategory
org.talend.designer.codegen.config.CodeGeneratorArgument
" 
%>
<% 
CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
INode node = (INode)codeGenArgument.getArgument();
String cid = node.getUniqueName();

// Parameters
String consumer_key = ElementParameterParser.getValue(node,"__CONSUMER_KEY__");
String consumer_secret = ElementParameterParser.getValue(node,"__CONSUMER_SECRET__");
String access_token = ElementParameterParser.getValue(node,"__ACCESS_TOKEN__");
String access_token_secret = ElementParameterParser.getValue(node,"__ACCESS_TOKEN_SECRET__");
String connection_type = ElementParameterParser.getValue(node,"__CONNECTION_TYPE__");

%>
twitter4j.conf.ConfigurationBuilder cb_<%= cid %> = new twitter4j.conf.ConfigurationBuilder();
cb_<%= cid %>.setOAuthConsumerKey(<%= consumer_key %>);
cb_<%= cid %>.setOAuthConsumerSecret(<%= consumer_secret %>);
cb_<%= cid %>.setOAuthAccessToken(<%= access_token %>);
cb_<%= cid %>.setOAuthAccessTokenSecret(<%= access_token_secret %>);


/**
 * TODO: it's better to enable json ONLY if there are some json connection in the whole job
 */
cb_<%= cid %>.setJSONStoreEnabled(true);


twitter4j.<%= connection_type %>Factory twitter_factory_<%= cid %> = new twitter4j.<%= connection_type %>Factory(cb_<%= cid %>.build());
twitter4j.<%= connection_type %> twitter_<%= cid %> = twitter_factory_<%= cid %>.getInstance();
globalMap.put("twitter_<%= cid %>",twitter_<%= cid %>);